# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install PyQt6
        python3 -m pip install setuptools
    - name: Build package
      run: python3 setup.py sdist
    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/


# # This is a basic workflow to help you get started with Actions

# name: Test & Upload to TestPyPI

# # Controls when the action will run. 
# on:
#   # Triggers the workflow on push to the master branch
#   push:
#     branches: [ master ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Sets up python3
#       - uses: actions/setup-python@v2
#         with:
#           python-version: 3.8 

#       # Installs and upgrades pip, installs other dependencies and installs the package from setup.py
#       - name: "Installs and upgrades pip, installs other dependencies and installs the package from setup.py"
#         run: |
#           # Upgrade pip
#           python3 -m pip install --upgrade pip
#           # Install build deps
#           python3 -m pip install setuptools wheel twine
#           # If requirements.txt exists, install from it
#           if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#           # Install the package from setup.py
#           python3 setup.py install

#       # Tests with unittest
#       - name: Test with unittest
#         run: |
#           cd tests
#           python3 -m unittest discover
#           cd ..

#       # Upload to TestPyPI
#       - name: Build and Upload to TestPyPI
#         run: |
#           python3 setup.py sdist bdist_wheel
#           python3 -m twine upload dist/*
#         env:
#           TWINE_USERNAME: __token__
#           TWINE_PASSWORD: ${{ secrets.TWINE_TEST_TOKEN }}
#           TWINE_REPOSITORY: testpypi